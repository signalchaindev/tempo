type Mutation {
  resetDb: String
  populateDb: SuccessMessage
  DUPLICATE: String
}

type Query {
  testConnection: String
  DUPLICATE: String
}

type Query {
  getAllProducts: [Product!]!
}

type Product {
  id: ID
  name: String
  price: Int
}

scalar Date

type SuccessMessage {
  successMessage: String
}

type Query {
  getAllTodos: [Todo!]!
}

type Mutation {
  createTodo(input: String!): SuccessMessage
}

type Todo {
  id: ID
  todo: String
  completed: Boolean
}

type Mutation {
  createUser(email: String): User
  updateUser(id: ID!): User
  deleteUser(id: String!): User
}

type Query {
  getAllUsers: [User]
  getSingleUser(email: String!): User
}

type User {
  name: String
  email: String
  password: String
  Permission: Permission
}

enum Permission {
  USER
  ADMIN
  SUPER_ADMIN
}

